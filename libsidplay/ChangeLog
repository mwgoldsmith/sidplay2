Changes since 2.0.6:

(ms) Converted complete source tree from kdevelop to native Automake
and made it build a library and the console player. Developers are
advised to configure the package with --disable-shared, so that they
don't need to install a shared library and/or set the
LD_LIBRARY_PATH, respectively.


Release Notes 2.0.6:

This version mainly sees bug fixes and finally gets both the Linux and
Windows versions to exactly the same code state.

Bug Fixes:

Tunes which didn't play.
DirectX fixes.
Timers fixed for both directx and mmsystem drivers and will therefore
never cache ahead by more than 0.5 secs.  This still needs doing under
Linux to prevent the timers getting 3 seconds ahead.
And more...


Added:

Most of the other features of the expermental version now classed as 2.0.5
apart from fastforward/rewind and filter redefinition.
Ability to skip to the prev/next subtune using the '<' and '>' keys.
And more...


Features for next release:

Ansi console support delayed till next release.
Songlength database support delayed.
Filter redefinition delayed.
Fastforward/rewind, delayed indefinately untill feedback is provided
on how good/bad it is (please any feedback at all!).
Player configuration file.



Release Notes 2.0.4-2:

Bug fixes to sid mixer.
Program termination now quicker from ^C.
New xSID code included for testing.
New man page added.
Thanks to those concerened for finding/fixing the bugs in this release.

To follow shortly:
Again 2.0.5 will follow, with the last of the features from my unofficial
experimental version (found on the sidplay2 ftp site).  Be warned that there
are now bug fixes in the main version which the experimental one does not
contain!

From now on experimental versions will be released as patches on the
main release versions in CVS until they are determined to be stable.



Release Notes 2.0.4:

Temporary release to try and bring code upto date.  A 2.0.5 will follow shortly
to achieve all that implemented in  experimental release 2.0.4pre5 (This is available
at ftp://sidplay2.sourceforge.net/pub/sidplay2)

Lots of new options added, bug fixes for Solaris drivers, 16 bit support...  Other
additions will fall into 2.0.5 once they have stabalised.



CHANGES since 2.0.2:

Added:

* Timer

* Support for credits

* Option -fd, overrides values returned by sidtune and forces dual sid support
  with the second sid being mapped at 0xd500.  Use this to support stereo sids
  (not stereo mus) until the format is changed to support them properly.

* Windows Drivers.  Code now now be built as a Win32 console application.
  The include paths need to be changed to Visual C++ so all the headers can
  be seen.  Paths need are PATH/libsidplay-<ver>/ and PATH/libsidplay-<ver>/win.

* Sparc Driver (This driver hasn't been tested or compiled)

* Support for playing of playsid smaples through reSID


Changed:

* Changing the environment whilist the song is playing nolonger stops the song.
  Environment changes are now delayed until a new song is loaded

* environment class renamed to SidEnvironment to avoid some naming issues with
  Visual C++.

* xSID minior fixes to make code compile on Visual C++.

* Structure of audio drivers for better auto detection and Win32 support.

* Sidplayer structure now implements Cheshire Cat techniques to hide private members
  This means that all header files required by private members no longer need to be
  installed

* Added workaround in CPU code for bug found in Visual C++ 5.

* Finally corrected all playsid digi modes using information provided bu
  Michael Schwendt from the original source of Game Over.

* Removed nasty code hacks for Windows.


Fixed:

* xSID bug preventing it from not playing some samples.

* myTune now initialised to NULL (reported by Jarno)

* Placing of an invalid switch on an otherwise legal line did not throw an error.

* Use of bitfields which breaks portability of CPU emulation

* Unions on Big Endian machines where all variables are varying sizes


Issues:

* Timer is actually what has been decoded rather than what has been
  played.  This is due to the soundcard drivers buffer the samples.
  Anyway, it's better than nothing.



CHANGES since 2.0.1:

Added:

* Time count

* xsidplays audio drivers (well linux one)

* Command line options

* Volume controls for left and right

* 8 bit mixer


Changed:

* Renamed the project to libsidplay (eventually this code will be a library).
  main.cpp and the audio directory will form the basis of a new project called
  sidplay-2.X.X.

* Sidtune.  Only need one player emulation for stereo MUS files.

* WavFile now converted to be another driver. (Makes code have better re-use)

* New are now have error checking

* Configure files now work

* Prevented the loadSong function initialising the player twice.



CHANGES since 2.0.0:

Added:

* Extended sid support (xSID, written by myself from scratch).  xSIDs interface is designed to look like reSID and can easily be used to help developers of other players.

* Support for all libsidplay-1.X.X environment modes.

* Stereo SID & MUS file support.

* Sid2Wav support (thanks to Michael Schwendt).


Fixed:

* CPU using wrong address for reset vector.

* The use of statics in CPU a member function (Required to play stereo MUS files).


Changed:

* All data types now use _sidt namespace.

* Better handling of reSID clock calls to seriously reduce CPU overhead.



CHANGES from libsidplay 1.X.X

* Most of the code has been re-written by myself with all the new emulated IC's being cycle based.

* The interface has been revamped and is based on standard functions provided by a music player e.g. play, stop, pause, etc

* reSID is now the default and currently only provided SID emulation. (written by Dag Lem)

* Sidtune library taken from libsidplay-1.X.X for file support. (written by Michael Schwendt)
