/* sidconfig.h (template) */
#ifndef _sidconfig_h_
#define _sidconfig_h_

/* Define the sizeof of types in bytes */
#define SID_SIZEOF_CHAR      @SID_SIZEOF_CHAR@
#define SID_SIZEOF_SHORT_INT @SID_SIZEOF_SHORT_INT@
#define SID_SIZEOF_INT       @SID_SIZEOF_INT@
#define SID_SIZEOF_LONG_INT  @SID_SIZEOF_LONG_INT@

/* Define SID_WORDS_BIGENDIAN if your processor stores words
   with the most significant byte first (like Motorola and SPARC,
   unlike Intel and VAX).  */
/* Define SID_WORDS_LITTLEENDIAN if your processor stores words
   with the least significant byte first (like Intel and VAX).  */
#define @SID_WORDS_ENDIANESS@

/* Define if your compiler supports type "bool".
   If not, a user-defined signed integral type will be used.  */
@SID_HAVE_BOOL@

/* Define if your compiler supports AC99 header "stdint.h" */
@SID_HAVE_STDINT_H@

/* Define if your compiler supports AC99 header "stdbool.h" */
@SID_HAVE_STDBOOL_H@

/* DLL building support on win32 hosts */
#ifndef SID_EXTERN
#   ifdef DLL_EXPORT      /* defined by libtool (if required) */
#       define SID_EXTERN __declspec(dllexport)
#   endif
#   ifdef SID_DLL_IMPORT  /* define if linking with this dll */
#       define SID_EXTERN __declspec(dllimport)
#   endif
#   ifndef SID_EXTERN     /* static linking or !_WIN32 */
#       define SID_EXTERN
#   endif
#endif

#endif /* _sidconfig_h_ */
