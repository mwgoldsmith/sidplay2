<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLL|Win32">
      <Configuration>DebugDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|Win32">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLL|x64">
      <Configuration>DebugDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|x64">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{173EC10D-E364-45AE-BCC9-E0EED77FDBEA}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>sidplay</RootNamespace>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <TargetName>lib$(ProjectName)2d</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TargetName>lib$(ProjectName)2d</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <TargetName>lib$(ProjectName)2</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TargetName>lib$(ProjectName)2</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <TargetName>$(ProjectName)2d</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <TargetName>$(ProjectName)2d</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <TargetName>$(ProjectName)2</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <TargetName>$(ProjectName)2</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\libsidplay\include;$(ProjectDir)..\..\libsidplay\include\sidplay;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_WINDOWS;WIN32;_DEBUG;DEBUG;HAVE_MSWINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
      <ProgramDataBaseFileName>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Lib>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

FOR %%H IN (sidconfig.h sidint.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!" (
    DEL /f /q "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!"
  )
)

FOR %%H IN (Buffer.h c64env.h component.h event.h sid2types.h sidbuilder.h sidconfig.h sidendian.h sidint.h sidplay2.h SidTune.h sidtypes.h sidusage.h SmartPtr.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(OutDir)..\..\include\$(ProjectName)\!_HEADER!" (
    DEL /f /q "$(OutDir)..\..\include\$(ProjectName)\!_HEADER!"
  )
)

:: Delete directory if empty; silence if failure
RD /q "$(OutDir)..\..\include\$(ProjectName)\" 2&gt;NUL

ENDLOCAL
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF NOT EXIST "$(OutDir)..\..\include" (
  MKDIR "$(OutDir)..\..\include"
)

IF NOT EXIST "$(OutDir)..\..\include\$(ProjectName)" (
  MKDIR "$(OutDir)..\..\include\$(ProjectName)"
)

COPY "$(ProjectDir)sidconfig.h " "$(OutDir)..\..\include\$(ProjectName)"

FOR %%H IN (Buffer.h c64env.h component.h event.h sid2types.h sidbuilder.h sidendian.h sidint.h sidplay2.h SidTune.h sidtypes.h sidusage.h SmartPtr.h) DO (
  SET "_HEADER=%%H"
  COPY "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!" "$(OutDir)..\..\include\$(ProjectName)"
)

IF NOT EXIST "$(OutDir)..\..\licenses" (
  MKDIR "$(OutDir)..\..\licenses"
)

COPY "$(ProjectDir)..\..\libsidplay\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\libsidplay\include;$(ProjectDir)..\..\libsidplay\include\sidplay;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_WINDOWS;WIN32;_DEBUG;DEBUG;HAVE_MSWINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <ProgramDataBaseFileName>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Lib>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

FOR %%H IN (sidconfig.h sidint.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!" (
    DEL /f /q "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!"
  )
)

FOR %%H IN (Buffer.h c64env.h component.h event.h sid2types.h sidbuilder.h sidconfig.h sidendian.h sidint.h sidplay2.h SidTune.h sidtypes.h sidusage.h SmartPtr.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(OutDir)..\..\include\$(ProjectName)\!_HEADER!" (
    DEL /f /q "$(OutDir)..\..\include\$(ProjectName)\!_HEADER!"
  )
)

:: Delete directory if empty; silence if failure
RD /q "$(OutDir)..\..\include\$(ProjectName)\" 2&gt;NUL

ENDLOCAL
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF NOT EXIST "$(OutDir)..\..\include" (
  MKDIR "$(OutDir)..\..\include"
)

IF NOT EXIST "$(OutDir)..\..\include\$(ProjectName)" (
  MKDIR "$(OutDir)..\..\include\$(ProjectName)"
)

COPY "$(ProjectDir)sidconfig.h " "$(OutDir)..\..\include\$(ProjectName)"

FOR %%H IN (Buffer.h c64env.h component.h event.h sid2types.h sidbuilder.h sidendian.h sidint.h sidplay2.h SidTune.h sidtypes.h sidusage.h SmartPtr.h) DO (
  SET "_HEADER=%%H"
  COPY "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!" "$(OutDir)..\..\include\$(ProjectName)"
)

IF NOT EXIST "$(OutDir)..\..\licenses" (
  MKDIR "$(OutDir)..\..\licenses"
)

COPY "$(ProjectDir)..\..\libsidplay\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\libsidplay\include;$(ProjectDir)..\..\libsidplay\include\sidplay;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_WINDOWS;WIN32;NDEBUG;HAVE_MSWINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
      <ProgramDataBaseFileName>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Lib>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

FOR %%H IN (sidconfig.h sidint.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!" (
    DEL /f /q "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!"
  )
)

FOR %%H IN (Buffer.h c64env.h component.h event.h sid2types.h sidbuilder.h sidconfig.h sidendian.h sidint.h sidplay2.h SidTune.h sidtypes.h sidusage.h SmartPtr.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(OutDir)..\..\include\$(ProjectName)\!_HEADER!" (
    DEL /f /q "$(OutDir)..\..\include\$(ProjectName)\!_HEADER!"
  )
)

:: Delete directory if empty; silence if failure
RD /q "$(OutDir)..\..\include\$(ProjectName)\" 2&gt;NUL

ENDLOCAL
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF NOT EXIST "$(OutDir)..\..\include" (
  MKDIR "$(OutDir)..\..\include"
)

IF NOT EXIST "$(OutDir)..\..\include\$(ProjectName)" (
  MKDIR "$(OutDir)..\..\include\$(ProjectName)"
)

COPY "$(ProjectDir)sidconfig.h " "$(OutDir)..\..\include\$(ProjectName)"

FOR %%H IN (Buffer.h c64env.h component.h event.h sid2types.h sidbuilder.h sidendian.h sidint.h sidplay2.h SidTune.h sidtypes.h sidusage.h SmartPtr.h) DO (
  SET "_HEADER=%%H"
  COPY "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!" "$(OutDir)..\..\include\$(ProjectName)"
)

IF NOT EXIST "$(OutDir)..\..\licenses" (
  MKDIR "$(OutDir)..\..\licenses"
)

COPY "$(ProjectDir)..\..\libsidplay\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\libsidplay\include;$(ProjectDir)..\..\libsidplay\include\sidplay;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_WINDOWS;WIN32;NDEBUG;HAVE_MSWINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
      <ProgramDataBaseFileName>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Lib>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

FOR %%H IN (sidconfig.h sidint.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!" (
    DEL /f /q "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!"
  )
)

FOR %%H IN (Buffer.h c64env.h component.h event.h sid2types.h sidbuilder.h sidconfig.h sidendian.h sidint.h sidplay2.h SidTune.h sidtypes.h sidusage.h SmartPtr.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(OutDir)..\..\include\$(ProjectName)\!_HEADER!" (
    DEL /f /q "$(OutDir)..\..\include\$(ProjectName)\!_HEADER!"
  )
)

:: Delete directory if empty; silence if failure
RD /q "$(OutDir)..\..\include\$(ProjectName)\" 2&gt;NUL

ENDLOCAL
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF NOT EXIST "$(OutDir)..\..\include" (
  MKDIR "$(OutDir)..\..\include"
)

IF NOT EXIST "$(OutDir)..\..\include\$(ProjectName)" (
  MKDIR "$(OutDir)..\..\include\$(ProjectName)"
)

COPY "$(ProjectDir)sidconfig.h " "$(OutDir)..\..\include\$(ProjectName)"

FOR %%H IN (Buffer.h c64env.h component.h event.h sid2types.h sidbuilder.h sidendian.h sidint.h sidplay2.h SidTune.h sidtypes.h sidusage.h SmartPtr.h) DO (
  SET "_HEADER=%%H"
  COPY "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!" "$(OutDir)..\..\include\$(ProjectName)"
)

IF NOT EXIST "$(OutDir)..\..\licenses" (
  MKDIR "$(OutDir)..\..\licenses"
)

COPY "$(ProjectDir)..\..\libsidplay\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\libsidplay\include;$(ProjectDir)..\..\libsidplay\include\sidplay;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_WINDOWS;WIN32;_DEBUG;DEBUG;DLL_EXPORT;HAVE_MSWINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <ProgramDataBaseFileName>$(OutDir)..\..\bin\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>DebugFastLink</GenerateDebugInformation>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)$(TargetName).pgd</ProfileGuidedDatabase>
      <ProgramDatabaseFile>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDatabaseFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <LargeAddressAware>true</LargeAddressAware>
    </Link>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

FOR %%H IN (sidconfig.h sidint.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!" (
    DEL /f /q "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!"
  )
)

FOR %%H IN (Buffer.h c64env.h component.h event.h sid2types.h sidbuilder.h sidconfig.h sidendian.h sidint.h sidplay2.h SidTune.h sidtypes.h sidusage.h SmartPtr.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(OutDir)..\..\include\$(ProjectName)\!_HEADER!" (
    DEL /f /q "$(OutDir)..\..\include\$(ProjectName)\!_HEADER!"
  )
)

:: Delete directory if empty; silence if failure
RD /q "$(OutDir)..\..\include\$(ProjectName)\" 2&gt;NUL

ENDLOCAL
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF NOT EXIST "$(OutDir)..\..\include" (
  MKDIR "$(OutDir)..\..\include"
)

IF NOT EXIST "$(OutDir)..\..\include\$(ProjectName)" (
  MKDIR "$(OutDir)..\..\include\$(ProjectName)"
)

COPY "$(ProjectDir)sidconfig.h " "$(OutDir)..\..\include\$(ProjectName)"

FOR %%H IN (Buffer.h c64env.h component.h event.h sid2types.h sidbuilder.h sidendian.h sidint.h sidplay2.h SidTune.h sidtypes.h sidusage.h SmartPtr.h) DO (
  SET "_HEADER=%%H"
  COPY "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!" "$(OutDir)..\..\include\$(ProjectName)"
)

IF NOT EXIST "$(OutDir)..\..\licenses" (
  MKDIR "$(OutDir)..\..\licenses"
)

COPY "$(ProjectDir)..\..\libsidplay\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\libsidplay\include;$(ProjectDir)..\..\libsidplay\include\sidplay;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_WINDOWS;WIN32;_DEBUG;DEBUG;DLL_EXPORT;HAVE_MSWINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <ProgramDataBaseFileName>$(OutDir)..\..\bin\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>DebugFastLink</GenerateDebugInformation>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)$(TargetName).pgd</ProfileGuidedDatabase>
      <ProgramDatabaseFile>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDatabaseFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

FOR %%H IN (sidconfig.h sidint.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!" (
    DEL /f /q "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!"
  )
)

FOR %%H IN (Buffer.h c64env.h component.h event.h sid2types.h sidbuilder.h sidconfig.h sidendian.h sidint.h sidplay2.h SidTune.h sidtypes.h sidusage.h SmartPtr.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(OutDir)..\..\include\$(ProjectName)\!_HEADER!" (
    DEL /f /q "$(OutDir)..\..\include\$(ProjectName)\!_HEADER!"
  )
)

:: Delete directory if empty; silence if failure
RD /q "$(OutDir)..\..\include\$(ProjectName)\" 2&gt;NUL

ENDLOCAL
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF NOT EXIST "$(OutDir)..\..\include" (
  MKDIR "$(OutDir)..\..\include"
)

IF NOT EXIST "$(OutDir)..\..\include\$(ProjectName)" (
  MKDIR "$(OutDir)..\..\include\$(ProjectName)"
)

COPY "$(ProjectDir)sidconfig.h " "$(OutDir)..\..\include\$(ProjectName)"

FOR %%H IN (Buffer.h c64env.h component.h event.h sid2types.h sidbuilder.h sidendian.h sidint.h sidplay2.h SidTune.h sidtypes.h sidusage.h SmartPtr.h) DO (
  SET "_HEADER=%%H"
  COPY "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!" "$(OutDir)..\..\include\$(ProjectName)"
)

IF NOT EXIST "$(OutDir)..\..\licenses" (
  MKDIR "$(OutDir)..\..\licenses"
)

COPY "$(ProjectDir)..\..\libsidplay\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\libsidplay\include;$(ProjectDir)..\..\libsidplay\include\sidplay;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_WINDOWS;WIN32;NDEBUG;DLL_EXPORT;HAVE_MSWINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
      <ProgramDataBaseFileName>$(OutDir)..\..\bin\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>DebugFastLink</GenerateDebugInformation>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)$(TargetName).pgd</ProfileGuidedDatabase>
      <ProgramDatabaseFile>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDatabaseFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <LargeAddressAware>true</LargeAddressAware>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

FOR %%H IN (sidconfig.h sidint.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!" (
    DEL /f /q "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!"
  )
)

FOR %%H IN (Buffer.h c64env.h component.h event.h sid2types.h sidbuilder.h sidconfig.h sidendian.h sidint.h sidplay2.h SidTune.h sidtypes.h sidusage.h SmartPtr.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(OutDir)..\..\include\$(ProjectName)\!_HEADER!" (
    DEL /f /q "$(OutDir)..\..\include\$(ProjectName)\!_HEADER!"
  )
)

:: Delete directory if empty; silence if failure
RD /q "$(OutDir)..\..\include\$(ProjectName)\" 2&gt;NUL

ENDLOCAL
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF NOT EXIST "$(OutDir)..\..\include" (
  MKDIR "$(OutDir)..\..\include"
)

IF NOT EXIST "$(OutDir)..\..\include\$(ProjectName)" (
  MKDIR "$(OutDir)..\..\include\$(ProjectName)"
)

COPY "$(ProjectDir)sidconfig.h " "$(OutDir)..\..\include\$(ProjectName)"

FOR %%H IN (Buffer.h c64env.h component.h event.h sid2types.h sidbuilder.h sidendian.h sidint.h sidplay2.h SidTune.h sidtypes.h sidusage.h SmartPtr.h) DO (
  SET "_HEADER=%%H"
  COPY "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!" "$(OutDir)..\..\include\$(ProjectName)"
)

IF NOT EXIST "$(OutDir)..\..\licenses" (
  MKDIR "$(OutDir)..\..\licenses"
)

COPY "$(ProjectDir)..\..\libsidplay\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\libsidplay\include;$(ProjectDir)..\..\libsidplay\include\sidplay;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_WINDOWS;WIN32;NDEBUG;DLL_EXPORT;HAVE_MSWINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
      <ProgramDataBaseFileName>$(OutDir)..\..\bin\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>DebugFastLink</GenerateDebugInformation>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)$(TargetName).pgd</ProfileGuidedDatabase>
      <ProgramDatabaseFile>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDatabaseFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

FOR %%H IN (sidconfig.h sidint.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!" (
    DEL /f /q "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!"
  )
)

FOR %%H IN (Buffer.h c64env.h component.h event.h sid2types.h sidbuilder.h sidconfig.h sidendian.h sidint.h sidplay2.h SidTune.h sidtypes.h sidusage.h SmartPtr.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(OutDir)..\..\include\$(ProjectName)\!_HEADER!" (
    DEL /f /q "$(OutDir)..\..\include\$(ProjectName)\!_HEADER!"
  )
)

:: Delete directory if empty; silence if failure
RD /q "$(OutDir)..\..\include\$(ProjectName)\" 2&gt;NUL

ENDLOCAL
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF NOT EXIST "$(OutDir)..\..\include" (
  MKDIR "$(OutDir)..\..\include"
)

IF NOT EXIST "$(OutDir)..\..\include\$(ProjectName)" (
  MKDIR "$(OutDir)..\..\include\$(ProjectName)"
)

COPY "$(ProjectDir)sidconfig.h " "$(OutDir)..\..\include\$(ProjectName)"

FOR %%H IN (Buffer.h c64env.h component.h event.h sid2types.h sidbuilder.h sidendian.h sidint.h sidplay2.h SidTune.h sidtypes.h sidusage.h SmartPtr.h) DO (
  SET "_HEADER=%%H"
  COPY "$(ProjectDir)..\..\libsidplay\include\sidplay\!_HEADER!" "$(OutDir)..\..\include\$(ProjectName)"
)

IF NOT EXIST "$(OutDir)..\..\licenses" (
  MKDIR "$(OutDir)..\..\licenses"
)

COPY "$(ProjectDir)..\..\libsidplay\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="..\..\libsidplay\src\config.cpp" />
    <ClCompile Include="..\..\libsidplay\src\event.cpp" />
    <ClCompile Include="..\..\libsidplay\src\mixer.cpp" />
    <ClCompile Include="..\..\libsidplay\src\mos6510\mos6510.cpp" />
    <ClCompile Include="..\..\libsidplay\src\mos6526\mos6526.cpp" />
    <ClCompile Include="..\..\libsidplay\src\mos656x\mos656x.cpp" />
    <ClCompile Include="..\..\libsidplay\src\player.cpp" />
    <ClCompile Include="..\..\libsidplay\src\psiddrv.cpp" />
    <ClCompile Include="..\..\libsidplay\src\reloc65.c" />
    <ClCompile Include="..\..\libsidplay\src\sid6526\sid6526.cpp" />
    <ClCompile Include="..\..\libsidplay\src\sidplay2.cpp" />
    <ClCompile Include="..\..\libsidplay\src\sidtune\IconInfo.cpp" />
    <ClCompile Include="..\..\libsidplay\src\sidtune\InfoFile.cpp" />
    <ClCompile Include="..\..\libsidplay\src\sidtune\MUS.cpp" />
    <ClCompile Include="..\..\libsidplay\src\sidtune\p00.cpp" />
    <ClCompile Include="..\..\libsidplay\src\sidtune\PP20.cpp" />
    <ClCompile Include="..\..\libsidplay\src\sidtune\PRG.CPP" />
    <ClCompile Include="..\..\libsidplay\src\sidtune\PSID.cpp" />
    <ClCompile Include="..\..\libsidplay\src\sidtune\SidTune.cpp" />
    <ClCompile Include="..\..\libsidplay\src\sidtune\SidTuneTools.cpp" />
    <ClCompile Include="..\..\libsidplay\src\xsid\xsid.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\..\libsidplay\include\sidenv.h" />
    <ClInclude Include="..\..\libsidplay\include\sidplay\Buffer.h" />
    <ClInclude Include="..\..\libsidplay\include\sidplay\c64env.h" />
    <ClInclude Include="..\..\libsidplay\include\sidplay\component.h" />
    <ClInclude Include="..\..\libsidplay\include\sidplay\event.h" />
    <ClInclude Include="..\..\libsidplay\include\sidplay\sid2types.h" />
    <ClInclude Include="..\..\libsidplay\include\sidplay\sidbuilder.h" />
    <ClInclude Include="..\..\libsidplay\include\sidplay\sidendian.h" />
    <ClInclude Include="..\..\libsidplay\include\sidplay\sidplay2.h" />
    <ClInclude Include="..\..\libsidplay\include\sidplay\SidTune.h" />
    <ClInclude Include="..\..\libsidplay\include\sidplay\sidtypes.h" />
    <ClInclude Include="..\..\libsidplay\include\sidplay\sidusage.h" />
    <ClInclude Include="..\..\libsidplay\include\sidplay\SmartPtr.h" />
    <ClInclude Include="..\..\libsidplay\src\c64\c64cia.h" />
    <ClInclude Include="..\..\libsidplay\src\c64\c64vic.h" />
    <ClInclude Include="..\..\libsidplay\src\c64\c64xsid.h" />
    <ClInclude Include="..\..\libsidplay\src\mos6510\conf6510.h" />
    <ClInclude Include="..\..\libsidplay\src\mos6510\cycle_based\mos6510c.h" />
    <ClInclude Include="..\..\libsidplay\src\mos6510\cycle_based\sid6510c.h" />
    <ClInclude Include="..\..\libsidplay\src\mos6510\mos6510.h" />
    <ClInclude Include="..\..\libsidplay\src\mos6510\opcodes.h" />
    <ClInclude Include="..\..\libsidplay\src\mos6526\mos6526.h" />
    <ClInclude Include="..\..\libsidplay\src\mos656x\mos656x.h" />
    <ClInclude Include="..\..\libsidplay\src\nullsid.h" />
    <ClInclude Include="..\..\libsidplay\src\player.h" />
    <ClInclude Include="..\..\libsidplay\src\sid6526\sid6526.h" />
    <ClInclude Include="..\..\libsidplay\src\sidtune\PP20.h" />
    <ClInclude Include="..\..\libsidplay\src\sidtune\PP20_Defs.h" />
    <ClInclude Include="..\..\libsidplay\src\sidtune\SidTuneCfg.h" />
    <ClInclude Include="..\..\libsidplay\src\sidtune\SidTuneTools.h" />
    <ClInclude Include="..\..\libsidplay\src\xsid\xsid.h" />
    <ClInclude Include="config.h" />
    <ClInclude Include="sidconfig.h" />
    <ClInclude Include="sidint.h" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\..\libsidplay\src\char.bin" />
    <None Include="..\..\libsidplay\src\kernal.bin" />
    <None Include="..\..\libsidplay\src\mos6510\cycle_based\mos6510c.i" />
    <None Include="..\..\libsidplay\src\mos6510\cycle_based\sid6510c.i" />
    <None Include="..\..\libsidplay\src\poweron.bin" />
    <None Include="..\..\libsidplay\src\psiddrv.a65" />
    <None Include="..\..\libsidplay\src\psiddrv.bin" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>